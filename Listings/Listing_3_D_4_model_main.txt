@startuml
enum EntityType {
    CUSTOMER
    CAR
    TRANSACTION
}

enum DataType {
    CSV
    JSON
}

class CarRentalSystem {
    -customers: List<Customer>
    -availableCars: List<Car>
    -rentedCars: List<Car>
    -transactions: List<Transaction>
    -dataManager: DataManger
    +registerCustomer()
    +rentCar()
    +returnCar()
    +listAvailableCars()
    +listRentedCars()
    +listCustomerTransactions()
}

class Customer {
    -id: String
    -name: String
    -phoneNumber: String
    -address: String
    -email: String
    -rentedCars: List<Car>
    +rentCar()
    +returnCar()
    +listRentedCars()
    +serialize(DataType dataType): String
    +deserialize(String data, DataType dataType)
}

class Car {
    -id: String
    -make: String
    -model: String
    -year: int
    -dailyPrice: double
    -rented: boolean
    +rent()
    +return()
    +serialize(DataType dataType): String
    +deserialize(String data, DataType dataType)
}

class Transaction {
    -id: String
    -customer: Customer
    -car: Car
    -rentalDate: Date
    -returnDate: Date
    -totalPrice: double
    +calculateTotalPrice()
    +serialize(DataType dataType): String
    +deserialize(String data, DataType dataType)
}

class DataManager {
    +readData(EntityType entityType, DataType dataType)
    +writeData(EntityType entityType, DataType dataType)
}

class ErrorHandler {
    +handleError(exception: Exception)
}

class AuthenticationManager {
    -users: List<User>
    +login(username: String, password: String): boolean
    +logout()
}

class SecurityManager {
    +encrypt(data: String): String
    +decrypt(data: String): String
    +authorize(user: User, permission: String): boolean
}

class MessageHandler {
    +log(message: String)
    +showMessage(message: String)
}

class User {
    -id: String
    -name: String
    -role: UserRole
}

enum UserRole {
    ADMIN
    POWER_USER
    USER
    GUEST
}

CarRentalSystem -left-> MessageHandler : uses >
CarRentalSystem -up-> AuthenticationManager : uses >
CarRentalSystem -up-> SecurityManager : uses >
CarRentalSystem -up-> ErrorHandler : uses >
CarRentalSystem -down-> Customer : manages >
CarRentalSystem -down-> Car : manages >
CarRentalSystem -down-> Transaction : manages >
CarRentalSystem -right-> DataManager : uses >
AuthenticationManager --> User : manages
Customer --> Car : has
Transaction -left-> Customer : has
Transaction --> Car : has
DataManager --> EntityType : uses
DataManager --> DataType : uses
User -left-> UserRole : has
@enduml
